name: rpg_mirror

on:
  push:
    branches-ignore:
      - 'ga-ignore-'
  pull_request:
    branches-ignore:
      - 'ga-ignore-'

env:
  EXECUTABLES: "my_rpg"

jobs:
  check_repository_cleanliness:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check if the repository is clean and void of any unwanted files (temp files, binary files, etc.)
        run: |
          output=0
          for invalid_file in $(find . -type f,d \( -regex '.*\(~\|\.o\|#.*#\|\.a\|\.so\|\.gcno\|\.gcda\|\.gcov\|\.*/tmp/.*\)' \));
          do
              echo "::error file=$invalid_file,title=Unwanted file detected::$invalid_file"
              output=1
          done
          if [ "$output" -eq "1" ]; then
              exit 1;
          fi

  check_program_compilation_and_launch_test:
    runs-on: ubuntu-latest
    needs: [check_repository_cleanliness]
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v2
      - name: check if the source code can compile
        timeout-minutes: 2
        run: make
      - name: clean the repository
        run: make clean
      - name: check if binary file exist and are executable
        run: |
          for executable in ${{ env.EXECUTABLES }}
          do
            if [ ! -x $executable ] || [ ! -f $executable ]; then
              exit 1
            fi
          done
      # - name: check if tests of the project can be run
      #   timeout-minutes: 2
      #   run: make tests_run

  push_to_github:
    runs-on: ubuntu-latest
    needs: [check_program_compilation_and_launch_test]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ secrets.THE_REPO }}
          ssh_private_key:
            ${{ secrets.THE_KEY }}